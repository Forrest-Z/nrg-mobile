#!/usr/bin/env python
PACKAGE = "velodyne_orient"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("optomize", bool_t, 0, "True if we want to setOptimizeCoefficients on seg model", True)
gen.add("max_iterations", double_t, 0, "Max iterations for seg model", 1500, 10, 100000)
gen.add("dist_thresh", double_t, 0, "Distance threshold for the segmentation model", 0.03, 0.0, 1.0)
gen.add("set_angle", bool_t, 0, "True if we want to set the angle threshold", False)
gen.add("angle_thresh", double_t, 0, "Value of angle threshold for segmenation model", 0.2, 0.0, 1.57)
gen.add("set_axis", bool_t, 0, "True if segmentation model should set axis", False)
gen.add("max_dist_from_z_0", double_t, 0, "Max distance a plane can be from z0 to still be considered the ground", 0.15, 0.0, 0.5)
gen.add("publish_ground", bool_t, 0, "True if we want to publish the ground model", False)
gen.add("calc_rate", double_t, 0, "Rate for calculation loop to run", 0.5, 0.1, 50.0)
gen.add("publish_rate", double_t, 0, "Rate to publish point clouds to octomap", 3.0, 0.1, 50.0)
gen.add("max_attempts", int_t, 0, "Number of attempts to segment ground plane before trying next cloud", 15, 1, 100)

exit(gen.generate(PACKAGE, "velodyne_orient", "velodyne_orient"))
